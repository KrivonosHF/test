{"ast":null,"code":"import _slicedToArray from \"/home/krivonos/projects/test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/krivonos/projects/test/src/editor/Toolbar.tsx\";\nimport React from \"react\";\nimport { Popper, ButtonGroup, IconButton, Input } from \"@material-ui/core\";\nimport { FormatBold, FormatItalic, FormatUnderlined, Link, Close } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: theme.palette.common.black\n  },\n  button: {\n    color: theme.palette.common.white,\n    opacity: 0.75,\n    \"&:hover\": {\n      opacity: 1\n    },\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n  input: {\n    color: theme.palette.common.white,\n    padding: theme.spacing(0.25, 1)\n  },\n  close: {\n    opacity: 0.75,\n    cursor: \"pointer\",\n    \"&:hover\": {\n      opacity: 1\n    }\n  }\n}));\nexport function Toolbar(props) {\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        link = _React$useState2[0],\n        setLink = _React$useState2[1];\n\n  const s = useStyles();\n  const editor = props.editor,\n        toggleMark = props.toggleMark,\n        transforms = props.transforms; // const editorSlate = useSlate();\n\n  return /*#__PURE__*/React.createElement(Popper, Object.assign({\n    className: s.root\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }), link === null ?\n  /*#__PURE__*/\n\n  /* Formatting controls */\n  React.createElement(ButtonGroup, {\n    variant: \"text\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: s.button,\n    size: \"small\",\n    onClick: () => {\n      transforms.setNodes(editor, {\n        bold: true\n      }, {\n        match: n => Text.isText(n),\n        split: true\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormatBold, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    className: s.button,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormatItalic, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    className: s.button,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormatUnderlined, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    className: s.button,\n    size: \"small\",\n    onClick: () => console.log(\"212\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }))) :\n  /*#__PURE__*/\n\n  /* URL input field */\n  React.createElement(\"form\", {\n    onSubmit: x => x.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: s.input,\n    type: \"url\",\n    value: link //onChange={x => setLink(x.target.value)}\n    ,\n    endAdornment: /*#__PURE__*/React.createElement(Close, {\n      className: s.close,\n      fontSize: \"small\",\n      onClick: () => setLink(null),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }),\n    placeholder: \"https://\",\n    disableUnderline: true,\n    fullWidth: true,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/home/krivonos/projects/test/src/editor/Toolbar.tsx"],"names":["React","Popper","ButtonGroup","IconButton","Input","FormatBold","FormatItalic","FormatUnderlined","Link","Close","makeStyles","useStyles","theme","root","background","palette","common","black","button","color","white","opacity","paddingTop","paddingBottom","input","padding","spacing","close","cursor","Toolbar","props","useState","link","setLink","s","editor","toggleMark","transforms","setNodes","bold","match","n","Text","isText","split","console","log","x","preventDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Popper,\n  PopperProps,\n  ButtonGroup,\n  IconButton,\n  Input,\n} from \"@material-ui/core\";\nimport {\n  FormatBold,\n  FormatItalic,\n  FormatUnderlined,\n  Link,\n  Close,\n} from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: theme.palette.common.black,\n  },\n  button: {\n    color: theme.palette.common.white,\n    opacity: 0.75,\n    \"&:hover\": {\n      opacity: 1,\n    },\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  input: {\n    color: theme.palette.common.white,\n    padding: theme.spacing(0.25, 1),\n  },\n  close: {\n    opacity: 0.75,\n    cursor: \"pointer\",\n    \"&:hover\": {\n      opacity: 1,\n    },\n  },\n}));\n\nexport interface ToolbarProps extends Omit<PopperProps, \"children\"> {\n  editor: any;\n  toggleMark: any;\n  transforms: any;\n}\n\nexport function Toolbar(props: ToolbarProps) {\n  const [link, setLink] = React.useState(null);\n  const s = useStyles();\n  const { editor, toggleMark, transforms } = props;\n\n  // const editorSlate = useSlate();\n  return (\n    <Popper className={s.root} {...props}>\n      {link === null ? (\n        /* Formatting controls */\n        <ButtonGroup variant=\"text\" color=\"primary\">\n          <IconButton\n            className={s.button}\n            size=\"small\"\n            onClick={() => {\n              transforms.setNodes(\n                editor,\n                { bold: true },\n                { match: n => Text.isText(n), split: true }\n              )\n            }}\n          >\n            <FormatBold fontSize=\"small\" />\n          </IconButton>\n          <IconButton className={s.button} size=\"small\">\n            <FormatItalic fontSize=\"small\" />\n          </IconButton>\n          <IconButton className={s.button} size=\"small\">\n            <FormatUnderlined fontSize=\"small\" />\n          </IconButton>\n          <IconButton\n            className={s.button}\n            size=\"small\"\n            onClick={() => console.log(\"212\")}\n          >\n            <Link fontSize=\"small\" />\n          </IconButton>\n        </ButtonGroup>\n      ) : (\n        /* URL input field */\n        <form onSubmit={x => x.preventDefault()}>\n          <Input\n            className={s.input}\n            type=\"url\"\n            value={link}\n            //onChange={x => setLink(x.target.value)}\n            endAdornment={\n              <Close\n                className={s.close}\n                fontSize=\"small\"\n                onClick={() => setLink(null)}\n              />\n            }\n            placeholder=\"https://\"\n            disableUnderline\n            fullWidth\n            autoFocus\n          />\n        </form>\n      )}\n    </Popper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}