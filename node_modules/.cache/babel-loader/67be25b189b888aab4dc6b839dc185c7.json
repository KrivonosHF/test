{"ast":null,"code":"import _objectWithoutProperties from \"/home/krivonos/projects/test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/krivonos/projects/test/src/editor/Editor.tsx\";\nimport React from \"react\";\nimport { createEditor, Node, Transforms } from \"slate\";\nimport { Editable, withReact, Slate } from \"slate-react\";\nimport { DefaultElement } from \"./elements\";\nimport { Toolbar } from \"./Toolbar\";\n\nfunction renderElement(props) {\n  const attributes = props.attributes,\n        children = props.children;\n  return /*#__PURE__*/React.createElement(DefaultElement, Object.assign({}, attributes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }\n  }), children);\n}\n\nfunction renderLeaf(props) {\n  const attributes = props.attributes,\n        children = props.children;\n  return /*#__PURE__*/React.createElement(\"span\", Object.assign({}, attributes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }\n  }), children);\n}\n\nexport function Editor(props) {\n  const value = props.value,\n        onChange = props.onChange,\n        other = _objectWithoutProperties(props, [\"value\", \"onChange\"]);\n\n  const editor = React.useMemo(() => withReact(createEditor()), []);\n  console.log(editor, 9999999);\n  console.log(props);\n  return /*#__PURE__*/React.createElement(Slate, {\n    editor: editor,\n    value: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    open: true,\n    editor: editor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Editable, {\n    renderElement: renderElement,\n    renderLeaf: renderLeaf,\n    onKeyDown: event => {\n      if (!event.ctrlKey) {\n        return;\n      }\n\n      switch (event.key) {\n        case '`':\n          {\n            event.preventDefault();\n            console.log(Transforms.setNodes);\n            Transforms.setNodes(editor, {\n              bold: true\n            }); // const [match] = editor(editor, {\n            //   match: n => n.type === 'code',\n            // })\n            // Transforms.setNodes(\n            //   editor,\n            // { type: 'code' },\n            // { match: n => Editor.isBlock(editor, n) }\n            // )\n\n            break;\n          }\n\n        case 'b':\n          {\n            event.preventDefault();\n            console.log(event.key); // Transforms.setNodes(\n            //   editor,\n            //   { bold: true },\n            //   { match: n => Text.isText(n), split: true }\n            // )\n\n            break;\n          }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n}\nexport { Node };","map":{"version":3,"sources":["/home/krivonos/projects/test/src/editor/Editor.tsx"],"names":["React","createEditor","Node","Transforms","Editable","withReact","Slate","DefaultElement","Toolbar","renderElement","props","attributes","children","renderLeaf","Editor","value","onChange","other","editor","useMemo","console","log","event","ctrlKey","key","preventDefault","setNodes","bold"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,IAAvB,EAA6BC,UAA7B,QAAgD,OAAhD;AACA,SACEC,QADF,EAEEC,SAFF,EAGEC,KAHF,QAOO,aAPP;AASA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAAkD;AAAA,QACxCC,UADwC,GACfD,KADe,CACxCC,UADwC;AAAA,QAC5BC,QAD4B,GACfF,KADe,CAC5BE,QAD4B;AAEhD,sBAAO,oBAAC,cAAD,oBAAoBD,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAiCC,QAAjC,CAAP;AACD;;AAED,SAASC,UAAT,CAAoBH,KAApB,EAA4C;AAAA,QAClCC,UADkC,GACTD,KADS,CAClCC,UADkC;AAAA,QACtBC,QADsB,GACTF,KADS,CACtBE,QADsB;AAE1C,sBAAO,8CAAUD,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAuBC,QAAvB,CAAP;AACD;;AAYD,OAAO,SAASE,MAAT,CAAgBJ,KAAhB,EAAoC;AAAA,QACjCK,KADiC,GACHL,KADG,CACjCK,KADiC;AAAA,QAC1BC,QAD0B,GACHN,KADG,CAC1BM,QAD0B;AAAA,QACbC,KADa,4BACHP,KADG;;AAEzC,QAAMQ,MAAM,GAAGlB,KAAK,CAACmB,OAAN,CAAc,MAAMd,SAAS,CAACJ,YAAY,EAAb,CAA7B,EAA+C,EAA/C,CAAf;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAAoB,OAApB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AAEA,sBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEQ,MAAf;AAAuB,IAAA,KAAK,EAAEH,KAA9B;AAAqC,IAAA,QAAQ,EAAEC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAE,IAAf;AAAqB,IAAA,MAAM,EAAEE,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AACE,IAAA,aAAa,EAAET,aADjB;AAEE,IAAA,UAAU,EAAEI,UAFd;AAGE,IAAA,SAAS,EAAES,KAAK,IAAI;AAClB,UAAI,CAACA,KAAK,CAACC,OAAX,EAAoB;AAClB;AACD;;AAED,cAAQD,KAAK,CAACE,GAAd;AACE,aAAK,GAAL;AAAU;AACRF,YAAAA,KAAK,CAACG,cAAN;AACAL,YAAAA,OAAO,CAACC,GAAR,CAAalB,UAAU,CAACuB,QAAxB;AACCvB,YAAAA,UAAU,CAACuB,QAAX,CACCR,MADD,EAEC;AAAES,cAAAA,IAAI,EAAE;AAAR,aAFD,EAHO,CASR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACD;;AAED,aAAK,GAAL;AAAU;AACRL,YAAAA,KAAK,CAACG,cAAN;AACAL,YAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACE,GAAlB,EAFQ,CAIR;AACA;AACA;AACA;AACA;;AACA;AACD;AA/BH;AAiCD,KAzCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAgDD;AAED,SAAStB,IAAT","sourcesContent":["import React from \"react\";\nimport { createEditor, Node, Transforms, } from \"slate\";\nimport {\n  Editable,\n  withReact,\n  Slate,\n  RenderElementProps,\n  RenderLeafProps,\n  useSlate,\n} from \"slate-react\";\n\nimport { DefaultElement } from \"./elements\";\nimport { Toolbar } from \"./Toolbar\";\n\nfunction renderElement(props: RenderElementProps) {\n  const { attributes, children } = props;\n  return <DefaultElement {...attributes}>{children}</DefaultElement>;\n}\n\nfunction renderLeaf(props: RenderLeafProps) {\n  const { attributes, children } = props;\n  return <span {...attributes}>{children}</span>;\n}\n\n\nexport interface EditorProps {\n  value: Node[];\n  onChange: (value: Node[]) => void;\n  placeholder?: string;\n  autoFocus?: boolean;\n  spellCheck?: boolean;\n  renderMark?: any; \n}\n\nexport function Editor(props: EditorProps) {\n  const { value, onChange, ...other } = props;\n  const editor = React.useMemo(() => withReact(createEditor()), []);\n  console.log(editor, 9999999)\n  console.log(props);\n\n  return (\n    <Slate editor={editor} value={value} onChange={onChange}>\n      <Toolbar open={true} editor={editor} />\n      <Editable\n        renderElement={renderElement}\n        renderLeaf={renderLeaf}\n        onKeyDown={event => {\n          if (!event.ctrlKey) {\n            return\n          }\n\n          switch (event.key) {\n            case '`': {\n              event.preventDefault()\n              console.log( Transforms.setNodes)\n               Transforms.setNodes(\n                editor,\n                { bold: true },\n              \n              )\n              \n              // const [match] = editor(editor, {\n              //   match: n => n.type === 'code',\n              // })\n              // Transforms.setNodes(\n              //   editor,\n              // { type: 'code' },\n              // { match: n => Editor.isBlock(editor, n) }\n              // )\n              break\n            }\n\n            case 'b': {\n              event.preventDefault()\n              console.log(event.key)\n\n              // Transforms.setNodes(\n              //   editor,\n              //   { bold: true },\n              //   { match: n => Text.isText(n), split: true }\n              // )\n              break\n            }\n          }\n        }}\n      />\n    </Slate>\n  );\n}\n\nexport { Node };\n"]},"metadata":{},"sourceType":"module"}