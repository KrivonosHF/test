{"ast":null,"code":"import _slicedToArray from \"/home/krivonos/projects/test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/krivonos/projects/test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/krivonos/projects/test/src/editor/Editor.tsx\";\nimport React from \"react\";\nimport { createEditor, Node } from \"slate\";\nimport { Editable, withReact, Slate } from \"slate-react\";\nimport { DefaultElement } from \"./elements\";\n\nfunction renderElement(props) {\n  const attributes = props.attributes,\n        children = props.children;\n  return /*#__PURE__*/React.createElement(DefaultElement, Object.assign({}, attributes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }\n  }), children);\n}\n\nfunction renderLeaf(props) {\n  const attributes = props.attributes,\n        children = props.children;\n  return /*#__PURE__*/React.createElement(\"span\", Object.assign({}, attributes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }\n  }), children);\n}\n\nexport function Editor(props) {\n  const value = props.value,\n        onChange = props.onChange,\n        other = _objectWithoutProperties(props, [\"value\", \"onChange\"]);\n\n  const editor = React.useMemo(() => withReact(createEditor()), []);\n  console.log(props);\n  const CustomEditor = {\n    isBoldMarkActive(editor) {\n      const _Editor$nodes = Editor.nodes(editor, {\n        match: n => n.bold === true,\n        universal: true\n      }),\n            _Editor$nodes2 = _slicedToArray(_Editor$nodes, 1),\n            match = _Editor$nodes2[0];\n\n      return !!match;\n    }\n\n  };\n  return /*#__PURE__*/React.createElement(Slate, {\n    editor: editor,\n    value: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onMouseDown: event => {\n      event.preventDefault();\n      CustomEditor.toggleBoldMark(editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Bold\"), /*#__PURE__*/React.createElement(\"button\", {\n    onMouseDown: event => {\n      event.preventDefault();\n      CustomEditor.toggleCodeBlock(editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Code Block\")), /*#__PURE__*/React.createElement(Editable, {\n    editor: editor,\n    renderElement: renderElement,\n    renderLeaf: renderLeaf,\n    onKeyDown: event => {\n      if (!event.ctrlKey) {\n        return;\n      }\n\n      switch (event.key) {\n        case '`':\n          {\n            event.preventDefault();\n            CustomEditor.toggleCodeBlock(editor);\n            break;\n          }\n\n        case 'b':\n          {\n            event.preventDefault();\n            CustomEditor.toggleBoldMark(editor);\n            break;\n          }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }));\n}\nexport { Node };","map":{"version":3,"sources":["/home/krivonos/projects/test/src/editor/Editor.tsx"],"names":["React","createEditor","Node","Editable","withReact","Slate","DefaultElement","renderElement","props","attributes","children","renderLeaf","Editor","value","onChange","other","editor","useMemo","console","log","CustomEditor","isBoldMarkActive","nodes","match","n","bold","universal","event","preventDefault","toggleBoldMark","toggleCodeBlock","ctrlKey","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { createEditor, Node } from \"slate\";\nimport {\n  Editable,\n  withReact,\n  Slate,\n  RenderElementProps,\n  RenderLeafProps,\n  useSlate,\n} from \"slate-react\";\n\nimport { DefaultElement } from \"./elements\";\nimport { Toolbar } from \"./Toolbar\";\n\nfunction renderElement(props: RenderElementProps) {\n  const { attributes, children } = props;\n  return <DefaultElement {...attributes}>{children}</DefaultElement>;\n}\n\nfunction renderLeaf(props: RenderLeafProps) {\n  const { attributes, children } = props;\n  return <span {...attributes}>{children}</span>;\n}\n\n\nexport interface EditorProps {\n  value: Node[];\n  onChange: (value: Node[]) => void;\n  placeholder?: string;\n  autoFocus?: boolean;\n  spellCheck?: boolean;\n}\n\nexport function Editor(props: EditorProps) {\n  const { value, onChange, ...other } = props;\n  const editor = React.useMemo(() => withReact(createEditor()), []);\n  console.log(props);\n  const CustomEditor = {\n    isBoldMarkActive(editor) {\n      const [match] = Editor.nodes(editor, {\n        match: n => n.bold === true,\n        universal: true,\n      })\n  \n      return !!match\n    },\n  }\n  return (\n    <Slate editor={editor} value={value} onChange={onChange}>\n    <div>\n      <button\n        onMouseDown={event => {\n          event.preventDefault()\n          CustomEditor.toggleBoldMark(editor)\n        }}\n      >\n        Bold\n      </button>\n      <button\n        onMouseDown={event => {\n          event.preventDefault()\n          CustomEditor.toggleCodeBlock(editor)\n        }}\n      >\n        Code Block\n      </button>\n    </div>\n    <Editable\n      editor={editor}\n      renderElement={renderElement}\n      renderLeaf={renderLeaf}\n      onKeyDown={event => {\n        if (!event.ctrlKey) {\n          return\n        }\n\n        switch (event.key) {\n          case '`': {\n            event.preventDefault()\n            CustomEditor.toggleCodeBlock(editor)\n            break\n          }\n\n          case 'b': {\n            event.preventDefault()\n            CustomEditor.toggleBoldMark(editor)\n            break\n          }\n        }\n      }}\n    />\n  </Slate>\n  );\n}\n\nexport { Node };\n"]},"metadata":{},"sourceType":"module"}